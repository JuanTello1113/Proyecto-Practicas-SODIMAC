generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model archivo_adjunto {
  id_archivo     Int       @id @default(autoincrement())
  id_novedad     Int?
  nombre_archivo String?   @db.VarChar(255)
  ruta_archivo   String?
  fecha_subida   DateTime? @default(now()) @db.Timestamp(6)
  novedad        novedad?  @relation(fields: [id_novedad], references: [id_novedad], onDelete: Cascade, onUpdate: NoAction)
}

model correo_log {
  id_log          Int           @id @default(autoincrement())
  id_notificacion Int?
  estado_envio    String?       @db.VarChar(50)
  fecha_envio     DateTime?     @default(now()) @db.Timestamp(6)
  mensaje_error   String?
  notificacion    notificacion? @relation(fields: [id_notificacion], references: [id_notificacion], onDelete: Cascade, onUpdate: NoAction)
}

model estado_novedad {
  id_estado_novedad Int                 @id @default(autoincrement())
  nombre_estado     String              @db.VarChar(50)
  historial_novedad historial_novedad[]
  novedad           novedad[]
}

model historial_novedad {
  id_historial            Int             @id @default(autoincrement())
  id_novedad              Int?
  id_estado_novedad       Int?
  fecha_modificacion      DateTime?       @default(now()) @db.Timestamp(6)
  comentario              String?
  id_usuario_modificacion Int?
  estado_novedad          estado_novedad? @relation(fields: [id_estado_novedad], references: [id_estado_novedad], onUpdate: NoAction)
  novedad                 novedad?        @relation(fields: [id_novedad], references: [id_novedad], onDelete: Cascade, onUpdate: NoAction)
  usuario                 usuario?        @relation(fields: [id_usuario_modificacion], references: [id_usuario], onUpdate: NoAction)
}

model notificacion {
  id_notificacion Int          @id @default(autoincrement())
  id_usuario      Int?
  id_novedad      Int?
  mensaje         String?
  fecha_creacion  DateTime?    @default(now()) @db.Timestamp(6)
  leido           Boolean?     @default(false)
  correo_log      correo_log[]
  novedad         novedad?     @relation(fields: [id_novedad], references: [id_novedad], onDelete: Cascade, onUpdate: NoAction)
  usuario         usuario?     @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade, onUpdate: NoAction)
}

model novedad {
  id_novedad           Int                    @id @default(autoincrement())
  id_usuario           Int?
  id_tipo_novedad      Int?
  id_estado_novedad    Int?
  fecha_creacion       DateTime?              @default(now()) @db.Timestamp(6)
  descripcion          String?
  cantidad_solicitudes Int?
  es_masiva            Boolean                @default(false)
  archivo_adjunto      archivo_adjunto[]
  detalles             DetalleNovedadMasiva[]
  historial_novedad    historial_novedad[]
  notificacion         notificacion[]
  estado_novedad       estado_novedad?        @relation(fields: [id_estado_novedad], references: [id_estado_novedad], onUpdate: NoAction)
  tipo_novedad         tipo_novedad?          @relation(fields: [id_tipo_novedad], references: [id_tipo_novedad], onUpdate: NoAction)
  usuario              usuario?               @relation(fields: [id_usuario], references: [id_usuario], onUpdate: NoAction)
}

model rol {
  id_rol      Int           @id @default(autoincrement())
  nombre_rol  String        @db.VarChar(50)
  usuario_rol usuario_rol[]
}

model tipo_novedad {
  id_tipo_novedad Int       @id @default(autoincrement())
  nombre_tipo     String    @db.VarChar(100)
  codigo          String    @unique @db.VarChar(50)
  novedad         novedad[]
}

model usuario {
  id_usuario        Int                 @id @default(autoincrement())
  nombre            String              @db.VarChar(100)
  correo            String              @unique @db.VarChar(100)
  estado            Boolean             @default(true)                   // activo por defecto
  fecha_creacion    DateTime            @default(now())                 // se guarda al crear
  ultima_actividad  DateTime? // Nueva
  ip_ultima_conexion String? // Nueva
  ubicacion          String? // Nueva (ej: "Bogot√°, CO")
  historial_novedad historial_novedad[]
  notificacion      notificacion[]
  novedad           novedad[]
  usuario_rol       usuario_rol[]
  usuario_tienda    usuario_tienda[]
  refresh_token_hash String? @db.Text
}


model usuario_rol {
  id_usuario Int
  id_rol     Int
  rol        rol     @relation(fields: [id_rol], references: [id_rol], onDelete: Cascade, onUpdate: NoAction)
  usuario    usuario @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_usuario, id_rol])
}

model tienda {
  id_tienda      Int              @id @default(autoincrement())
  nombre_tienda  String           @db.VarChar(100)
  usuario_tienda usuario_tienda[]
}

model usuario_tienda {
  id_usuario Int
  id_tienda  Int
  tienda     tienda  @relation(fields: [id_tienda], references: [id_tienda], onDelete: Cascade)
  usuario    usuario @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)

  @@id([id_usuario, id_tienda])
}

model DetalleNovedadMasiva {
  id_detalle               Int       @id(map: "detalle_novedad_masiva_pkey1") @default(autoincrement())
  id_novedad               Int
  n                        Int?
  fecha                    DateTime? @db.Timestamp(6)
  cedula                   Int?
  nombre                   String?   @db.VarChar
  categoria                String?   @db.VarChar
  tienda                   String?   @db.VarChar
  jefe                     String?   @db.VarChar
  detalle                  String?   @db.VarChar
  jornada_empleado         String?   @db.VarChar
  jornada_otro_si          String?   @db.VarChar
  fecha_inicio             DateTime? @db.Timestamp(6)
  fecha_fin                DateTime? @db.Timestamp(6)
  salario_actual           Float?
  salario_otro_si          Float?
  consecutivo_forms        String?   @db.VarChar
  concepto                 String?   @db.VarChar
  codigo_concepto          Int?
  unidades                 Int?
  fecha_novedad            DateTime? @db.Timestamp(6)
  dias_a_tomar             Int?
  fecha_inicio_disfrute    DateTime? @db.Timestamp(6)
  fecha_fin_disfrute       DateTime? @db.Timestamp(6)
  responsable_validacion   String?   @default("") @db.VarChar
  respuesta_validacion     String?   @default("") @db.VarChar
  ajuste                   String?   @default("") @db.VarChar
  fecha_pago               DateTime? @db.Timestamp(6)
  area_responsable         String?   @default("") @db.VarChar
  categoria_inconsistencia String?   @default("") @db.VarChar
  novedad                  novedad   @relation(fields: [id_novedad], references: [id_novedad], onDelete: Cascade, onUpdate: NoAction, map: "fk_novedad")

  @@map("detalle_novedad_masiva")
}
